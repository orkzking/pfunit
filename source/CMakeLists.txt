cmake_minimum_required(VERSION 2.8)

SET (CMAKE_Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/mod)

find_package(PythonInterp REQUIRED) #Sets ${PYTHON_EXECUTABLE}

# Generate AssertArray files:  AssertArrays.fh, generated.inc, and AssertXYZ?.F90
execute_process(
   COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/GenerateAssertsOnArrays.py --maxRank ${MAX_RANK}
   WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
   RESULT_VARIABLE generated_result
   OUTPUT_VARIABLE generated_output
)

# Get the names of the files generated by GenerateAssertsOnArrays.py
execute_process(
   COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/GeneratedSources.py
   WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
   RESULT_VARIABLE generated_sources_result
   OUTPUT_VARIABLE generated_sources_output
)

#

set(srcs
  AbstractTestParameter.F90
  Assert.F90
  AssertBasic.F90
  AbstractTestResult.F90
  BaseTestRunner.F90
  DebugListener.F90
  DynamicTestCase.F90
  Exception.F90
  Expectation.F90
  MockCall.F90
  MockRepository.F90
  ParallelContext.F90
  ParameterizedTestCase.F90
  Params.F90
  ResultPrinter.F90
  SerialContext.F90
  SourceLocation.F90
  StringConversionUtilities.F90
  SubsetRunner.F90
  SurrogateTestCase.F90
  Test.F90
  TestCase.F90
  TestFailure.F90
  TestListener.F90
  TestMethod.F90
  TestResult.F90
  TestRunner.F90
  TestSuite.F90
  ThrowFundamentalTypes.F90
  XmlPrinter.F90

  sFUnit.F90
  )

if ( ROBUST )
  list (APPEND srcs
    UnixPipeInterfaces.F90
    UnixProcess.F90
    RobustRunner.F90
    RemoteProxyTestCase.F90
    )
endif ()

message( "Including generated files '${generated_sources_output}'." )
include( ${CMAKE_CURRENT_BINARY_DIR}/${generated_sources_output} )


add_library(sfunit STATIC ${srcs})

if (BUILD_SHARED)
    add_library(sfunit_shared SHARED ${srcs})
    set_target_properties(sfunit_shared PROPERTIES OUTPUT_NAME funit)

   if (MPI)
     add_library(pfunit_shared SHARED ${srcs} ${mpi_srcs})
     set_target_properties(pfunit_shared PROPERTIES OUTPUT_NAME pfunit)
   endif ()
endif ()

include_directories(${CMAKE_BINARY_DIR}/mod)
include_directories(${CMAKE_BINARY_DIR}/source)

install (TARGETS sfunit DESTINATION lib)
if (BUILD_SHARED)
    install (TARGETS sfunit_shared pfunit_shared DESTINATION lib)
endif()

if (MPI)
    set (mpi_srcs
      MpiContext.F90
      MpiStubs.F90
      MpiTestParameter.F90
      MpiTestCase.F90
      MpiTestMethod.F90
      pFUnit.F90
      )
  add_library(pfunit STATIC ${srcs} ${mpi_srcs})
  if (MISMATCH)
    set_source_files_properties(MpiContext.F90 PROPERTIES COMPILE_FLAGS ${MISMATCH})
  endif ()

  install (TARGETS pfunit DESTINATION lib)
  if (BUILD_SHARED)
    install (TARGETS pfunit_shared DESTINATION lib)
  endif ()
endif ()

INSTALL (DIRECTORY  ${CMAKE_BINARY_DIR}/mod DESTINATION .)
